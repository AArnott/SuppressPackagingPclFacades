<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <UsingTask
      TaskName="SuppressPackagingPclFacades"
      TaskFactory="CodeTaskFactory"
      AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v12.0.dll" >
    <ParameterGroup>
      <XapFilesInputCollection ParameterType="Microsoft.Build.Framework.ITaskItem[]" Required="true" />
      <ReducedXapFilesInputCollection ParameterType="Microsoft.Build.Framework.ITaskItem[]" Output="true" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.Collections.Generic" />
      <Using Namespace="System.Text" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
        var modifiedInputs = new List<ITaskItem>();

        // Our algorithm is to just pick the first of any redundant files.
        var targetPathSet = new HashSet<string>(StringComparer.OrdinalIgnoreCase);
        foreach (var inputFile in XapFilesInputCollection)
        {
          if (string.IsNullOrEmpty(inputFile.GetMetadata("TargetPath")) || targetPathSet.Add(inputFile.GetMetadata("TargetPath")))
          {
            modifiedInputs.Add(inputFile);
          }
        }
        
        ReducedXapFilesInputCollection = modifiedInputs.ToArray();
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <PropertyGroup>
    <XapPackagerDependsOn>$(XapPackagerDependsOn);SuppressPackagingPclFacades</XapPackagerDependsOn>
    <MSBuildAllProjects>$(MSBuildAllProjects);$(MSBuildThisFilePath)</MSBuildAllProjects>
  </PropertyGroup>
  <Target Name="SuppressPackagingPclFacades">
    <SuppressPackagingPclFacades
      XapFilesInputCollection="@(XapFilesInputCollection)">
      <Output TaskParameter="ReducedXapFilesInputCollection" ItemName="ReducedXapFilesInputCollection" />
    </SuppressPackagingPclFacades>

    <!--<Message Importance="high" Text="XapFilesInputCollection: %(XapFilesInputCollection.Identity) %(XapFilesInputCollection.TargetPath)" />
    <Message Importance="high" Text="ReducedXapFilesInputCollection: %(ReducedXapFilesInputCollection.Identity) %(ReducedXapFilesInputCollection.TargetPath)" />-->

    <ItemGroup>
      <XapFilesInputCollection Remove="@(XapFilesInputCollection)" />
      <XapFilesInputCollection Include="@(ReducedXapFilesInputCollection)" />
    </ItemGroup>
  </Target>
</Project>